// import { useState } from 'react';
// import { GithubApiConfiguration } from '../types/GithubApiConfiguration';
// import axios from 'axios';
// import Axios, { AxiosInstance } from 'axios';
// import { GithubTokenResponse } from '../types/GithubTokenResponse';
// import { FullGithubAccount } from '../types/GithubAccount';
// import { GithubFile } from '../types/GithubFile';
// import { Repository } from '../types/Github/Repository';
// import { apiConfiguration } from '../services';

// async function createClient(code: string, state: string) {
//   const t = await getTokens(code, state);

//   if (apiConfiguration && t && t.access_token) {
//     setClient(
//       Axios.create({
//         baseURL: apiConfiguration.apiBaseUrl,
//         responseType: 'json' as const,
//         headers: {
//           'Content-Type': 'application/json',
//           Authorization: `Token ${t.access_token}`
//         },
//         timeout: 10 * 1000 // 10 * 1000ms = 10s
//       })
//     );
//   } else {
//     console.error('Failed to createClient');
//   }
// }

// async function getTokens(code: string, state: string): Promise<GithubTokenResponse | null> {
//   if (apiConfiguration && validateState(state)) {
//     try {
//       const response = await axios.post<GithubTokenResponse>(
//         `${apiConfiguration.azureUrl}/AuthorizeCodeDiaryGithub?github_code=${code}`
//       );

//       console.log(`Here is your access_token: ${response.data.access_token}`);

//       if (response.data.access_token === null || response.data.access_token === undefined) {
//         return null;
//       }

//       return response.data;
//     } catch (error) {
//       console.log('Failed to get tokens');
//       console.error(error);
//     }
//   }

//   return null;
// }

// function useMyApi() {
//   const [client, setClient] = useState<AxiosInstance | null>(null);
//   const [apiConfiguration, setApiConfiguration] = useState<GithubApiConfiguration | null>(null);

//   function setTokens(tokens: GithubTokenResponse): void {
//     Object.entries(tokens).forEach(([key, value]) => {
//       // Save expiration date in seconds
//       if (key.indexOf('expires_in') !== -1) {
//         const d = new Date();
//         console.log(value);
//         d.setSeconds(d.getSeconds() + (value as number));
//         window.localStorage.setItem(key.replace('expires_in', 'expires_on'), d.toISOString());
//       }

//       window.localStorage.setItem(key, `${value}`);
//     });
//   }

//   function getAccessToken(): string {
//     return window.localStorage.getItem('access_token') ?? '';
//   }

//   function login() {
//     if (apiConfiguration) {
//       window.location.href = `${apiConfiguration.oauthUrl}/authorize?client_id=${apiConfiguration.clientId}&redirect_uri=${apiConfiguration.appBaseUrl}/login/callback&state=${apiConfiguration.state}`;
//     }
//   }

//   function validateState(state: string): boolean {
//     return apiConfiguration != null && apiConfiguration.state === state;
//   }

//   async function getUser(): Promise<FullGithubAccount | null> {
//     if (client === null) {
//       return null;
//     }

//     try {
//       const response = await client.get<FullGithubAccount>('/user');
//       return response.data;
//     } catch (error) {
//       console.error(error);
//     }

//     return null;
//   }

//   async function getFile(user: string, repo: string, path: string): Promise<GithubFile | null> {
//     if (client === null) {
//       return null;
//     }

//     try {
//       const response = await client.get<GithubFile>(`/repos/${user}/${repo}/contents/entries/${path}`);
//       return response.data;
//     } catch (error) {
//       console.error(error);
//     }

//     return null;
//   }

//   async function getUserRepositories(): Promise<Repository[] | null> {
//     if (client === null) {
//       return null;
//     }

//     try {
//       const response = await client.get<Repository[]>('/user/repos');
//       return response.data;
//     } catch (error) {
//       console.log(error);
//       return null;
//     }
//   }
// }

// export default useMyApi;

// // public async setupClient(code: string, state: string): Promise<boolean> {
// //     console.log('Setting up client');
// //     const newTokens = await this.getTokens(code, state);

// //     if (newTokens) {
// //       this.setTokens(newTokens);

// //       this.client = this.createClient(this.getAccessToken());

// //       this.getSignedInUser().then(user => {
// //         if (user) {
// //           this.user = user;
// //           console.log(`Successfully logged in as ${this.user.login}`);
// //         } else {
// //           console.error('Failed to get user from github.');
// //         }
// //       });

// //       return true;
// //     }

// //     return false;
// //   }

// // async getIndex(): Promise<DiaryIndex | null> {
// //     if (this.client === null) {
// //       return null;
// //     }

// //     try {
// //       const response = await this.client.get<GithubFile>('/repos/jeremycote/code-diary-data/contents/index.json');
// //       //TODO: Verify data cast
// //       const buffer = Buffer.from(response.data.content, 'base64');
// //       const index: DiaryIndex = JSON.parse(buffer.toString());
// //       return index;
// //     } catch (error) {
// //       console.error(error);
// //     }

// //     return null;
// //   }

// // async getEntries(path: string): Promise<DiaryEntry[]> {
// //     const index = await this.getIndex();
// //     if (index) {
// //       return index.entries;
// //     } else {
// //       return [];
// //     }
// //   }
